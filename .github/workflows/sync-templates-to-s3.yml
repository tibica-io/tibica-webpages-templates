name: Sync Templates to S3

on:
  push:
    branches: [main]
    paths:
      - '**'  # Trigger on any file changes
  workflow_dispatch:  # Allow manual trigger

# Environment variables for the entire workflow
env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME_DEV: installator-cloud-git-dev-public-templates
  S3_BUCKET_NAME_STAGE: installator-cloud-git-stage-public-templates
  S3_BUCKET_NAME_MAIN: installator-cloud-git-main-public-templates
  AWS_ROLE_ARN_DEV: arn:aws:iam::920367284362:role/installator-cloud-git-dev-GithubActionsTemplateBucketWriter
  AWS_ROLE_ARN_STAGE: arn:aws:iam::854027224766:role/installator-cloud-git-stage-GithubActionsTemplateBucketWriter
  AWS_ROLE_ARN_MAIN: arn:aws:iam::222336095338:role/installator-cloud-git-main-GithubActionsTemplateBucketWriter

jobs:
  create-archives:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout templates repository
        uses: actions/checkout@v4

      - name: Create templates archive for each template
        run: |
          # Install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq
          
          # Create a temporary directory for archives
          mkdir -p archives

          # Read template list from templates-config.json
          if [ ! -f "templates-config/templates-config.json" ]; then
            echo "Error: templates-config/templates-config.json not found"
            exit 1
          fi

          # Extract template IDs from the JSON file
          TEMPLATES=($(jq -r '.templates | keys[]' templates-config/templates-config.json))
          
          echo "Found ${#TEMPLATES[@]} templates in config file:"
          printf ' - %s\n' "${TEMPLATES[@]}"

          # Create archives for each template using original names
          for template in "${TEMPLATES[@]}"; do
            if [ -d "$template" ]; then
              echo "Creating archive for $template..."
              # Create zip archive excluding .git and node_modules
              cd "$template"
              zip -r "../archives/${template}.zip" . \
                -x "*.git*" \
                -x "*node_modules*" \
                -x "*.DS_Store*" \
                -x "*dist/*" \
                -x "*build/*" \
                -x "*.next/*" \
                -x "*coverage/*"
              cd ..
              echo "Archive created: archives/${template}.zip"
            else
              echo "Warning: Template directory $template not found"
            fi
          done

      - name: Upload archives as artifact
        uses: actions/upload-artifact@v4
        with:
          name: template-archives
          path: archives/
          retention-days: 1

  sync-templates-dev:
    runs-on: ubuntu-latest
    needs: create-archives
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout templates repository
        uses: actions/checkout@v4

      - name: Download archives
        uses: actions/download-artifact@v4
        with:
          name: template-archives
          path: archives/

      - name: Configure AWS credentials for DEV
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN_DEV }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-TemplateSync-Dev

      - name: Upload archives to S3 DEV
        run: |
          # Upload each archive to S3 DEV
          aws s3 sync archives/ s3://${{ env.S3_BUCKET_NAME_DEV }}/templates/ \
            --delete \
            --exclude "*" \
            --include "*.zip"

          echo "Templates uploaded to S3 DEV bucket: ${{ env.S3_BUCKET_NAME_DEV }}"

      - name: Upload templates-config to S3 DEV
        run: |
          # Upload templates-config folder to the root of the bucket
          if [ -d "templates-config" ]; then
            aws s3 sync templates-config/ s3://${{ env.S3_BUCKET_NAME_DEV }}/templates-config/ \
              --delete \
              --exclude ".DS_Store" \
              --exclude "*.git*"
            echo "Templates-config uploaded to S3 DEV bucket: ${{ env.S3_BUCKET_NAME_DEV }}/templates-config/"
          else
            echo "Warning: templates-config directory not found"
          fi

      - name: Create and upload templates index for DEV
        run: |
          # Create a JSON index of all available templates
          cat > templates-index-dev.json << EOF
          {
            "lastUpdated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "commit": "${{ github.sha }}",
            "environment": "dev",
            "templates": [
          EOF

          # Add each template to the index
          first=true
          for archive in archives/*.zip; do
            if [ -f "$archive" ]; then
              filename=$(basename "$archive" .zip)
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> templates-index-dev.json
              fi
              cat >> templates-index-dev.json << EOF
              {
                "name": "$filename",
                "downloadUrl": "https://${{ env.S3_BUCKET_NAME_DEV }}.s3.amazonaws.com/templates/$filename.zip",
                "size": $(stat -c%s "$archive" 2>/dev/null || stat -f%z "$archive")
              }
          EOF
            fi
          done

          cat >> templates-index-dev.json << EOF
            ]
          }
          EOF

          # Upload the index file to templates/ prefix to match S3 permissions
          aws s3 cp templates-index-dev.json s3://${{ env.S3_BUCKET_NAME_DEV }}/templates/index.json \
            --content-type "application/json"

          echo "Templates index uploaded to S3 DEV"

  sync-templates-stage:
    runs-on: ubuntu-latest
    needs: create-archives
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout templates repository
        uses: actions/checkout@v4

      - name: Download archives
        uses: actions/download-artifact@v4
        with:
          name: template-archives
          path: archives/

      - name: Configure AWS credentials for STAGE
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN_STAGE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-TemplateSync-Stage

      - name: Upload archives to S3 STAGE
        run: |
          # Upload each archive to S3 STAGE
          aws s3 sync archives/ s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates/ \
            --delete \
            --exclude "*" \
            --include "*.zip"

          echo "Templates uploaded to S3 STAGE bucket: ${{ env.S3_BUCKET_NAME_STAGE }}"

      - name: Upload templates-config to S3 STAGE
        run: |
          # Upload templates-config folder to the root of the bucket
          if [ -d "templates-config" ]; then
            aws s3 sync templates-config/ s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates-config/ \
              --delete \
              --exclude ".DS_Store" \
              --exclude "*.git*"
            echo "Templates-config uploaded to S3 STAGE bucket: ${{ env.S3_BUCKET_NAME_STAGE }}/templates-config/"
          else
            echo "Warning: templates-config directory not found"
          fi

      - name: Create and upload templates index for STAGE
        run: |
          # Create a JSON index of all available templates
          cat > templates-index-stage.json << EOF
          {
            "lastUpdated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "commit": "${{ github.sha }}",
            "environment": "stage",
            "templates": [
          EOF

          # Add each template to the index
          first=true
          for archive in archives/*.zip; do
            if [ -f "$archive" ]; then
              filename=$(basename "$archive" .zip)
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> templates-index-stage.json
              fi
              cat >> templates-index-stage.json << EOF
              {
                "name": "$filename",
                "downloadUrl": "https://${{ env.S3_BUCKET_NAME_STAGE }}.s3.amazonaws.com/templates/$filename.zip",
                "size": $(stat -c%s "$archive" 2>/dev/null || stat -f%z "$archive")
              }
          EOF
            fi
          done

          cat >> templates-index-stage.json << EOF
            ]
          }
          EOF

          # Upload the index file to templates/ prefix to match S3 permissions
          aws s3 cp templates-index-stage.json s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates/index.json \
            --content-type "application/json"

          echo "Templates index uploaded to S3 STAGE"

      - name: Summary
        run: |
          echo "âœ… Template sync completed successfully!"
          echo "ğŸ“¦ DEV Archives uploaded to: s3://${{ env.S3_BUCKET_NAME_DEV }}/templates/"
          echo "ğŸ“¦ STAGE Archives uploaded to: s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates/"
          echo "ğŸ“¦ MAIN Archives uploaded to: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/"
          echo "ğŸ“‚ DEV Templates-config uploaded to: s3://${{ env.S3_BUCKET_NAME_DEV }}/templates-config/"
          echo "ğŸ“‚ STAGE Templates-config uploaded to: s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates-config/"
          echo "ğŸ“‚ MAIN Templates-config uploaded to: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates-config/"
          echo "ğŸ“‹ DEV Index file: s3://${{ env.S3_BUCKET_NAME_DEV }}/templates/index.json"
          echo "ğŸ“‹ STAGE Index file: s3://${{ env.S3_BUCKET_NAME_STAGE }}/templates/index.json"
          echo "ğŸ“‹ MAIN Index file: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/index.json"
          echo "ğŸ”— Commit: ${{ github.sha }}"

  sync-templates-main:
    runs-on: ubuntu-latest
    needs: create-archives
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout templates repository
        uses: actions/checkout@v4

      - name: Download archives
        uses: actions/download-artifact@v4
        with:
          name: template-archives
          path: archives/

      - name: Configure AWS credentials for MAIN
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN_MAIN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-TemplateSync-Main

      - name: Upload archives to S3 MAIN
        run: |
          # Upload each archive to S3 MAIN
          aws s3 sync archives/ s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/ \
            --delete \
            --exclude "*" \
            --include "*.zip"

          echo "Templates uploaded to S3 MAIN bucket: ${{ env.S3_BUCKET_NAME_MAIN }}"

      - name: Upload templates-config to S3 MAIN
        run: |
          # Upload templates-config folder to the root of the bucket
          if [ -d "templates-config" ]; then
            aws s3 sync templates-config/ s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates-config/ \
              --delete \
              --exclude ".DS_Store" \
              --exclude "*.git*"
            echo "Templates-config uploaded to S3 MAIN bucket: ${{ env.S3_BUCKET_NAME_MAIN }}/templates-config/"
          else
            echo "Warning: templates-config directory not found"
          fi

      - name: Create and upload templates index for MAIN
        run: |
          # Create a JSON index of all available templates
          cat > templates-index-main.json << EOF
          {
            "lastUpdated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "commit": "${{ github.sha }}",
            "environment": "main",
            "templates": [
          EOF

          # Add each template to the index
          first=true
          for archive in archives/*.zip; do
            if [ -f "$archive" ]; then
              filename=$(basename "$archive" .zip)
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> templates-index-main.json
              fi
              cat >> templates-index-main.json << EOF
              {
                "name": "$filename",
                "downloadUrl": "https://${{ env.S3_BUCKET_NAME_MAIN }}.s3.amazonaws.com/templates/$filename.zip",
                "size": $(stat -c%s "$archive" 2>/dev/null || stat -f%z "$archive")
              }
          EOF
            fi
          done

          cat >> templates-index-main.json << EOF
            ]
          }
          EOF

          # Upload the index file to templates/ prefix to match S3 permissions
          aws s3 cp templates-index-main.json s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/index.json \
            --content-type "application/json"

          echo "Templates index uploaded to S3 MAIN"

      - name: Summary
        run: |
          echo "âœ… Template sync to MAIN completed successfully!"
          echo "ğŸ“¦ MAIN Archives uploaded to: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/"
          echo "ğŸ“‚ MAIN Templates-config uploaded to: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates-config/"
          echo "ğŸ“‹ MAIN Index file: s3://${{ env.S3_BUCKET_NAME_MAIN }}/templates/index.json"
          echo "ğŸ”— Commit: ${{ github.sha }}"
